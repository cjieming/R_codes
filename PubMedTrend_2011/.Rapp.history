demo()
ls()
Since R is a vector based language that penalizes for loops, we will avoid#
#     for-loops, instead using "apply" statement variants (like "map" in other #
#     functional languages).     #
set.seed(19771025)   # set the seed to set the same results as this code#
N <- 10000  # trials#
true_answers <- sample(1:3, N, replace=TRUE)#
# We can assme that the contestant always choose door 1 without any loss of #
#    generality, by equivalence.  That is, we can always relabel the doors#
#    to make the user-chosen door into door 1.  #
# Thus, the host opens door '2' unless door 2 has the prize, in which case#
#    the host opens door 3.#
host_opens <- 2 + (true_answers == 2) #
other_door <- 2 + (true_answers != 2)  #
## if always switch#
summary( other_door == true_answers )#
## if we never switch#
summary( true_answers == 1)#
## if we randomly switch#
random_switch <- other_door#
random_switch[runif(N) >= .5] <- 1#
summary(random_switch == true_answers)#
## To go with the exact parameters of the Rosetta challenge, complicating matters....#
##  Note that the player may initially choose any of the three doors (not just Door 1),#
##     that the host opens a different door revealing a goat (not necessarily Door 3), and #
##     that he gives the player a second choice between the two remaining unopened doors. #
N <- 10000  #trials#
true_answers <- sample(1:3, N, replace=TRUE)#
user_choice <- sample(1:3, N, replace=TRUE)#
## the host_choice is more complicated#
host_chooser <- function(user_prize) {#
    # this could be cleaner#
    bad_choices <- unique(user_prize)#
    # in R, the x[-vector] form implies, choose the indices in x not in vector#
    choices <- c(1:3)[-bad_choices]#
    # if the first arg to sample is an int, it treats it as the number of choices#
    if (length(choices) == 1) {  return(choices)}#
    else { return(sample(choices,1))}#
}#
host_choice <- apply( X=cbind(true_answers,user_choice), FUN=host_chooser,MARGIN=1)#
not_door <- function(x){ return( (1:3)[-x]) }  # we could also define this#
                                                # directly at the FUN argument following#
other_door  <- apply( X = cbind(user_choice,host_choice), FUN=not_door, MARGIN=1)#
## if always switch#
summary( other_door == true_answers )#
## if we never switch#
summary( true_answers == user_choice)#
## if we randomly switch#
random_switch <- user_choice#
change <- runif(N) >= .5#
random_switch[change] <- other_door[change]#
summary(random_switch == true_answers)
help(sample)
help(<-)
set.seed(134532234)#
N <- 1000 # trails#
rätt_svar <- sample(1:4, N, replace=TRUE)
rätt_svar
summary(rätt_svar)
set.seed(134532234)#
N <- 1000 # trails#
rätt_svar <- sample(1:4, N, replace=TRUE)#
random_val <- sample(1:4, N, replace=TRUE)#
summary(rätt_svar = random_val)
set.seed(134532234)#
N <- 1000 # trails#
rätt_svar <- sample(1:4, N, replace=TRUE)#
random_val <- sample(1:4, N, replace=TRUE)#
summary(rätt_svar == random_val)
help(sample)
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- 25,50,60,25#
rätt_svar <- sample(1:4, N, replace=TRUE)#
random_val <- sample(1:4, N, replace=TRUE)#
summary(rätt_svar == random_val)
help list
help(list)
help(sample)
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)
help(summary)
x<-summary(rätt_svar == random_val)
x
help(summary)
help(apply)
help(cbind)
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
round(sum(rätt_svar==random_val)/numsim*100,1)
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
round(sum(rätt_svar==random_val)/N*100,1)
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar")
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter ", N, "simuleringar")
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar")
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
summary(rätt_svar == random_val)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
set.seed(134532234)#
N <- 1000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
sum(rätt_svar==25 & random_val==25)
summary(rätt_svar==25 & random_val==25)
rätt_svar
random_val
summary(rätt_svar==25)
summary(möjliga_svar==25)
summary(random_val==25)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")#
summary(rätt_svar==25 & random_val==25)
set.seed(134532234)#
N <- 10 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")#
summary(rätt_svar==25 & random_val==25)
rätt_svar
random_svar
random_val
set.seed(134532234)#
N <- 10 # trails#
möjliga_svar <- c(25,50,60,25)#
#rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
rätt_svar=25#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")#
summary(rätt_svar==25 & random_val==25)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
#rätt_svar <- sample(möjliga_svar, N, replace=TRUE)#
rätt_svar=25#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")#
summary(rätt_svar==25 & random_val==25)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")#
summary(rätt_svar==25 & random_val==25)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
set.seed(134532234)#
N <- 1000000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
set.seed(134532234)#
N <- 100000000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
summary(rätt_svar_random==random_val)
help(cbind)
help(apply)
set.seed(134532234)#
N <- 100000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I ",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
help(if)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
help(runif)
help(random)
help(sample)
help(apply)
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, replace = TRUE)#
	random_val<-sample(möjliga_svar, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger")
warnings()
rätt_svar<-sample(möjliga_svar, replace = TRUE)
rätt_svar
rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)
rätt_svar
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrent/N, "%")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N, "%")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 1000000 # trails#
möjliga_svar <- c(25,50,60,25)#
rätt_svar_random <- sample(möjliga_svar, N, replace=TRUE)#
random_val <- sample(möjliga_svar, N, replace=TRUE)#
cat("I",round(sum(rätt_svar_random==random_val)/N*100,1), "% av gångerna valdes rätt svar, efter", N, "simuleringar.")
set.seed(134532234)#
N <- 1000000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 100000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Av", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar<-sample(möjliga_svar, 1, replace = TRUE)#
	random_val<-sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt<-korrekt+1#
}#
cat("Efter", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 10000 # trails#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar <- sample(möjliga_svar, 1, replace = TRUE)#
	random_val <- sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt < -korrekt+1#
}#
cat("Efter", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 10000#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar <- sample(möjliga_svar, 1, replace = TRUE)#
	random_val <- sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt < -korrekt+1#
}#
cat("Efter", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
set.seed(134532234)#
N <- 10000#
möjliga_svar <- c(25,50,60,25)#
korrekt <- 0#
#
for(i in 1:N)#
{#
	rätt_svar <- sample(möjliga_svar, 1, replace = TRUE)#
	random_val <- sample(möjliga_svar, 1, replace = TRUE)#
	if(rätt_svar == random_val)#
	korrekt <- korrekt+1#
}#
cat("Efter", N, "simuleringar så valdes rätt svar", korrekt, "gånger, dvs", korrekt/N*100, "%")
setwd("/Users/Kris/Downloads/PubMedTrend")
source("PubMedTrend.R")
source("PubMedTrend.R")
packageStatus
packageStatus()
query <- c("cbt" = "cognitive behav* psychotherap*[tiab] OR cognitive behav* therap*[tiab] OR cognitive therap*[tiab] OR cognitive psychotherap*[tiab] OR behav* therap*[tiab] OR behav* psychotherapy[tiab]",#
           "pdt" = "psychodynamic therap*[tiab] OR psychodynamic psychotherap*[tiab] OR psychoanalytic therap*[tiab] OR psychoanalytic psychotherap*[tiab]")
df <- PubMedTrend(query,1990,2000)
