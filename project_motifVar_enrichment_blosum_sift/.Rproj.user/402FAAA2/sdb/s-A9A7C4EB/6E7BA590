{
    "contents" : "setwd(\"C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/blosum_sift_polyphen2_gerp\")\n# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/single proteins/TTC21B')\n\nlibrary(vioplot)\n#########################################################################################\n### this function takes in the title, residue number col, blosum score col\n### and the last col\n### make 2 combined plots (box plus bubble) of sequential and entropy-ordered positions\n\nboxbubbleplot <- function(title,resNumCol,scoreCol,lastCol,data, cexAxisFontSize=2)\n{\n  title = title\n  resNum = data[,resNumCol]\n  blosum = data[,scoreCol]\n  m=max(blosum)\n  tt.blosum=table(resNum, blosum)\n  range01 = function(x){(x-min(x))/(max(x)-min(x))}\n# #   x11()\n#   par(mar=c(5,6,4,4),xpd=TRUE,mar=c(1, 4, 1, 1) + 1)\n#   boxplot(blosum~resNum,xlab=\"position\",ylab=paste(title,sep=\" \"),cex.lab=2, cex.axis=cexAxisFontSize, las=2)\n#   \n#   ## convert table counts of SNVs at each position to dataframe\n#   a.blosum=as.data.frame(table(resNum))[,2]\n#   text(0,m+0.5,paste(a.blosum,collapse=\" \"),adj = c(0,0))\n#   \n#   ###### bubble plot\n#   df = expand.grid(sort(unique(resNum)),sort(unique(blosum)))\n#   aa = as.vector(table(resNum, blosum))\n#   df$value = aa\n#   \n#   # x11()\n#   area = pi * (df$value/150)^2\n#   par(mar=c(5,6,4,4),xpd=TRUE)\n#   area = (range01(df$value)/2)^2 * pi\n#   symbols(df$Var1,df$Var2,circles=area, inches=F, bg=rgb(1,0,0,0.5), fg=\"black\", yaxt=\"n\", \n#           xaxt=\"n\",add=T)\n#   \n#   # axis(1,at=seq(1,34), las=2)\n#   # axis(2,at=seq(-4,9))\n#   # text(0,3,paste(a.blosum,collapse=\" \"),adj = c(0,0))\n  \n  ## ordered\n#   x11()\n  par(mar=c(5,6,4,4),xpd=TRUE,mar=c(1, 4, 1, 1) + 1)\n  boxplot(blosum~data[,lastcol],xlab=\"position\",ylab=paste(title,sep=\" \"),cex.lab=2, cex.axis=cexAxisFontSize, las=2)\n  a.blosumordered=as.data.frame(table(data[,lastcol]))[,2]\n  text(0,m+0.5,paste(a.blosumordered,collapse=\" \"),adj = c(0,0))\n  \n  #### bubble\n  # x11()\n  par(mar=c(5,6,4,4),xpd=TRUE)\n  df.ordered = expand.grid(sort(unique(data[,lastcol])),sort(unique(blosum)))\n  aa.ordered = as.vector(table(data[,lastcol], blosum))\n  df.ordered$value = aa.ordered\n  area.ordered = (range01(df.ordered$value)/2)^2 * pi\n  symbols(df.ordered$Var1,df.ordered$Var2,circles=area.ordered, inches=F, bg=rgb(1,0,0,0.5), fg=\"black\", yaxt=\"n\", \n          xaxt=\"n\",xlab='position',ylab=paste(title, \"scores\",sep=\" \"),add=T)\n  # axis(1,at=seq(1,34),labels=as.vector(sort(unique(data[,lastcol]))), las=2)\n  # axis(2,at=seq(-4,9))\n  \n#   return(blosum);\n}\n##################################################################################################\n#### setup\nfilename = 'final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.blosum62-30-35-40-45-50.sift.gerp.bed'\n# filename = 'TTC21B-16tprs-34aa-concat.final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.blosum62-30-35-40-45-50.sift.gerp.txt'\ndata = read.table(filename, header=F, stringsAsFactors = F, comment.char=\"\", sep=\"\\t\")\norder = read.table('order_relentropy-tpr.txt', header=T, stringsAsFactors = F, comment.char=\"\", sep=\"\\t\")\nlastcol=ncol(data)+1\nresNumCol=45\n\n## we insert ordered info into lastCol so order info is lastCol\ndata[,lastcol] = factor(data[,resNumCol], levels=levels(data[,resNumCol])<-order$pos)\n\n#####################################################################\n#### BLOSUMs\nmaxResNum = max(data[,resNumCol])\nblos30 = array(list(NULL), c(maxResNum,1))\nblos62 = array(list(NULL), c(maxResNum,1))\n\nfor(i in 1:maxResNum)\n{  \n  blos30[[i]] = data$V77[data[,resNumCol] == i] \n  blos62[[i]] = data$V66[data[,resNumCol] == i] \n}\n\n## plot BLOSUM30\nx11()\npar(cex.axis=1.5,cex.lab=1.5)\ndo.call(vioplot,c(blos30,col=\"yellow\"))\nmtext(\"position\",side=1, line=2, cex=1.5)\nmtext(\"BLOSUM30\",side=2, line=2, cex=1.5)\n\n## plot BLOSUM62\nx11()\npar(cex.axis=1.5,cex.lab=1.5)\ndo.call(vioplot,c(blos62,col=\"yellow\"))\nmtext(\"position\",side=1, line=2, cex=1.5)\nmtext(\"BLOSUM62\",side=2, line=2, cex=1.5)\n\n# par(mfrow=c(4,1),tcl=-0.5)\n# boxbubbleplot('BLOSUM30',resNumCol,77,lastCol,data,1.5)\n# # boxbubbleplot('BLOSUM35',resNumCol,78,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM40',resNumCol,79,lastCol,data,1.5)\n# # boxbubbleplot('BLOSUM45',resNumCol,80,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM50',resNumCol,81,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM62',resNumCol,66,lastCol,data,1.5)\n\n## remove synonymous\ndata.ns.only <- data[!(data$V56 == \"SYNONYMOUS_CODING\" | data$V56 == \"SYNONYMOUS_CODING,SPLICE_SITE\"),]\n\nblos30.ns = array(list(NULL), c(maxResNum,1))\nblos62.ns = array(list(NULL), c(maxResNum,1))\n\nfor(i in 1:maxResNum)\n{  \n  blos30.ns[[i]] = data.ns.only$V77[data.ns.only[,resNumCol] == i] \n  blos62.ns[[i]] = data.ns.only$V66[data.ns.only[,resNumCol] == i] \n}\n\n\n# plot\nx11()\npar(mfrow=c(4,2),tcl=-0.5)\n\n## plot BLOSUM30\nx11()\npar(cex.axis=1.5,cex.lab=1.5)\ndo.call(vioplot,c(blos30,col=\"yellow\"))\nmtext(\"position\",side=1, line=2, cex=1.5)\nmtext(\"BLOSUM30-NS\",side=2, line=2, cex=1.5)\n\n## plot BLOSUM62\nx11()\npar(cex.axis=1.5,cex.lab=1.5)\ndo.call(vioplot,c(blos62,col=\"yellow\"))\nmtext(\"position\",side=1, line=2, cex=1.5)\nmtext(\"BLOSUM62-NS\",side=2, line=2, cex=1.5)\n\n# boxbubbleplot('BLOSUM30',resNumCol,77,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM30-NS',resNumCol,77,lastCol,data.ns.only,1.5)\n# boxbubbleplot('BLOSUM40',resNumCol,79,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM40-NS',resNumCol,79,lastCol,data.ns.only,1.5)\n# boxbubbleplot('BLOSUM50',resNumCol,81,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM50-NS',resNumCol,81,lastCol,data.ns.only,1.5)\n# boxbubbleplot('BLOSUM62',resNumCol,66,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM62-NS',resNumCol,66,lastCol,data.ns.only,1.5)\n\n\nx11()\n# par(mfrow=c(2,2),tcl=-0.5)\n# boxbubbleplot('BLOSUM30',resNumCol,77,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM30-NS',resNumCol,77,lastCol,data.ns.only,1.5)\n# boxbubbleplot('BLOSUM62',resNumCol,66,lastCol,data,1.5)\n# boxbubbleplot('BLOSUM62-NS',resNumCol,66,lastCol,data.ns.only,1.5)\n\n",
    "created" : 1432845260635.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "10|1|61|0|\n",
    "hash" : "3502704139",
    "id" : "6E7BA590",
    "lastKnownWriteTime" : 1433333512,
    "path" : "~/Shared/scripts-R_perl_shell_macros/R codes/motifVar_blosum.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}