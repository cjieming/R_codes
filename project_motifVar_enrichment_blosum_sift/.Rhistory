# barplot(rare.comm.ns,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),
#         col='blue', ylim=c(0,yuplimit))
# barplot(data$numRareNS,add=T,xaxt="n",col='red',ylim=c(0,yuplimit)) # tab.var
#
# legend(3,yuplimit,c("rare.ns","comm.ns"),
#        col=c("red","blue"), cex=2, pt.cex=2,
#        text.col = "black", pch = 15, bg = 'white')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/split into 2')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/3tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/exac')
setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/single proteins/TTC21B')
domain = 'TTC21B-16tpr 1TPR'
## data
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.AC.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.FLY.enrich', sep="\t", header=T, stringsAsFactors = F)
data = read.table('TTC21B-16tprs-34aa-concat.final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.blosum62-30-35-40-45-50.sift.gerp.enrich', sep="\t", header=T, stringsAsFactors = F)
data[data==0.001] <- 0
data.mnoS = matrix(nrow = nrow(data), ncol = 2)
data.mS = matrix(nrow = nrow(data), ncol = 2)
order = read.table('order_relentropy-tpr.txt', header=T, stringsAsFactors = F, comment.char="", sep="\t")
data$V20 = factor(data$resNum, levels=levels(data$resNum)<-order$pos)
## fisher's test
## pval and foldchange in data.m
## S and noS are with singletons (AC=1) and without singletons
## each row in the matrix is the position
for(i in 1:nrow(data))
{
d.noS <- matrix(c(data$numRareNS.noS[i],data$numCommNS.noS[i],data$numRareS.noS[i],
data$numCommS.noS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
d.S <- matrix(c(data$numRareNS[i],data$numCommNS[i],data$numRareS[i],
data$numCommS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
x.noS = fisher.test(d.noS,alternative="two.sided")
x.S = fisher.test(d.S,alternative="two.sided")
data.mnoS[i,1] = x.noS$p.value
data.mnoS[i,2] = x.noS$estimate
data.mS[i,1] = x.S$p.value
data.mS[i,2] = x.S$estimate
}
############################################ plot bar plots
###### rare.ns vs comm.ns
#### noS
rare.comm.ns.noS = data$numRareNS.noS + data$numCommNS.noS
yuplimit = max(rare.comm.ns.noS)+5
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
# barplot(rare.comm.ns,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),col='blue')
# barplot(data$numRareNS.noS,add=T,xaxt="n",col='red') # tab.var.noSingle
barplot(rare.comm.ns.noS,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),
col='blue', ylim=c(0,yuplimit))
barplot(data$numRareNS.noS,add=T,xaxt="n",col='red',ylim=c(0,yuplimit)) # tab.var.noSingle
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/split into 2')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/3tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/exac')
setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/single proteins/TTC21B')
domain = 'TTC21B-16tpr 1TPR'
## data
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.AC.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.FLY.enrich', sep="\t", header=T, stringsAsFactors = F)
data = read.table('TTC21B-16tprs-34aa-concat.final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.enrich', sep="\t", header=T, stringsAsFactors = F)
data[data==0.001] <- 0
data.mnoS = matrix(nrow = nrow(data), ncol = 2)
data.mS = matrix(nrow = nrow(data), ncol = 2)
order = read.table('order_relentropy-tpr.txt', header=T, stringsAsFactors = F, comment.char="", sep="\t")
data$V20 = factor(data$resNum, levels=levels(data$resNum)<-order$pos)
## fisher's test
## pval and foldchange in data.m
## S and noS are with singletons (AC=1) and without singletons
## each row in the matrix is the position
for(i in 1:nrow(data))
{
d.noS <- matrix(c(data$numRareNS.noS[i],data$numCommNS.noS[i],data$numRareS.noS[i],
data$numCommS.noS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
d.S <- matrix(c(data$numRareNS[i],data$numCommNS[i],data$numRareS[i],
data$numCommS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
x.noS = fisher.test(d.noS,alternative="two.sided")
x.S = fisher.test(d.S,alternative="two.sided")
data.mnoS[i,1] = x.noS$p.value
data.mnoS[i,2] = x.noS$estimate
data.mS[i,1] = x.S$p.value
data.mS[i,2] = x.S$estimate
}
############################################ plot bar plots
###### rare.ns vs comm.ns
#### noS
rare.comm.ns.noS = data$numRareNS.noS + data$numCommNS.noS
yuplimit = max(rare.comm.ns.noS)+5
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
# barplot(rare.comm.ns,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),col='blue')
# barplot(data$numRareNS.noS,add=T,xaxt="n",col='red') # tab.var.noSingle
barplot(rare.comm.ns.noS,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),
col='blue', ylim=c(0,yuplimit))
barplot(data$numRareNS.noS,add=T,xaxt="n",col='red',ylim=c(0,yuplimit)) # tab.var.noSingle
legend(3,yuplimit,c("rare.ns.noS","comm.ns.noS"),
col=c("red","blue"), cex=2, pt.cex=2,
text.col = "black", pch = 15, bg = 'white')
rare.comm.s.noS = data$numRareS.noS + data$numCommS.noS
yuplimit = max(rare.comm.s.noS)+5
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
barplot(rare.comm.s.noS,names.arg=data$resNum,main=paste('variants by ',domain,' motif pos'),
col='cyan',ylim=c(0,yuplimit))
barplot(data$numRareS.noS,add=T,xaxt="n",col='magenta',ylim=c(0,yuplimit)) # tab.var.noSingle
legend(3,yuplimit,c("rare.s.noS","comm.s.noS"),
col=c("magenta","cyan"), cex=2, pt.cex=2,
text.col = "black", pch = 15, bg = 'white')
num.Comm.noS = data$totVar.noS  - data$numRare.noS
a = log(data$numRare.noS/num.Comm.noS)
a.finite = a[!is.infinite(a)]
a[a == "Inf"] <- max(a.finite) +1
a[a == "-Inf"] <- -max(a.finite) -1
x11()
barplot(a,names.arg=data$resNum,
main=paste('rare:common variants noS by ',domain,'motif pos'),
col='red')
num.S.noS = data$numRareS.noS + data$numCommS.noS
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
b=log(data$num.NS.noS/num.S.noS)
b.finite = b[!is.infinite(a)]
b[b == "Inf"] <- max(a.finite) +1
b[b == "-Inf"] <- -max(a.finite) -1
barplot(b, names.arg=data$resNum,
main=paste('ns:s variants noS by ',domain,'motif pos'),
col='orange')
data.ordered = data[order(data$V20),]
num.S.noS.ordered = data.ordered$numRareS.noS + data.ordered$numCommS.noS
x11()
b1=log(data.ordered$num.NS.noS/num.S.noS.ordered)
b1.finite = b1[!is.infinite(b1)]
b1[b1 == "Inf"] <- max(b1.finite) +1
b1[b1 == "-Inf"] <- -max(b1.finite) -1
barplot(b1, names.arg=data.ordered$resNum,
main=paste('ns:s variants noS by ',domain,'motif pos'),
col='orange')
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
c=log(data$numRareNS.noS/data$numRareS.noS)
c.finite = c[!is.infinite(c)]
c[c == "Inf"] <- max(c.finite) +1
c[c == "-Inf"] <- -max(c.finite) -1
barplot(c, names.arg=data$resNum,
main=paste('ns.rare:s.rare variants noS by ',domain,'motif pos'),
col='red')
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
d=log(data$numCommNS.noS/data$numCommS.noS)
d.finite = d[!is.infinite(d)]
d[d == "Inf"] <- max(d.finite) +1
d[d == "-Inf"] <- -max(d.finite) -1
# d[d == "NaN"] <- 0
barplot(d, names.arg=data$resNum,
main=paste('ns.comm:s.comm variants noS by ',domain,'motif pos'),
col='black')
rare.comm.s.noS = data$numRareS.noS + data$numCommS.noS
yuplimit = max(rare.comm.s.noS)+5
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
barplot(rare.comm.s.noS,names.arg=data$resNum,main=paste('variants by ',domain,' motif pos'),
col='cyan',ylim=c(0,yuplimit))
barplot(data$numRareS.noS,add=T,xaxt="n",col='magenta',ylim=c(0,yuplimit)) # tab.var.noSingle
legend(3,yuplimit,c("rare.s.noS","comm.s.noS"),
col=c("magenta","cyan"), cex=2, pt.cex=2,
text.col = "black", pch = 15, bg = 'white')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/split into 2')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/3tpr')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/exac')
# setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/single proteins/TTC21B')
setwd('C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/1kg.esp6500')
domain = '1KG TPR'
## data
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.AC.enrich', sep="\t", header=T, stringsAsFactors = F)
# data = read.table('final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.571.uniqseq.1tpr.FLY.enrich', sep="\t", header=T, stringsAsFactors = F)
data = read.table('1KG.snps.nonmono.smartDomain2gPos.TPR.34aa.noS.enrich', sep="\t", header=T, stringsAsFactors = F)
data[data==0.001] <- 0
data.mnoS = matrix(nrow = nrow(data), ncol = 2)
data.mS = matrix(nrow = nrow(data), ncol = 2)
order = read.table('order_relentropy-tpr.txt', header=T, stringsAsFactors = F, comment.char="", sep="\t")
data$V20 = factor(data$resNum, levels=levels(data$resNum)<-order$pos)
## fisher's test
## pval and foldchange in data.m
## S and noS are with singletons (AC=1) and without singletons
## each row in the matrix is the position
for(i in 1:nrow(data))
{
d.noS <- matrix(c(data$numRareNS.noS[i],data$numCommNS.noS[i],data$numRareS.noS[i],
data$numCommS.noS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
d.S <- matrix(c(data$numRareNS[i],data$numCommNS[i],data$numRareS[i],
data$numCommS[i]), 2,2,
dimnames = list(Pathways = c("rare","comm"),SNPs = c("NS","S")))
x.noS = fisher.test(d.noS,alternative="two.sided")
x.S = fisher.test(d.S,alternative="two.sided")
data.mnoS[i,1] = x.noS$p.value
data.mnoS[i,2] = x.noS$estimate
data.mS[i,1] = x.S$p.value
data.mS[i,2] = x.S$estimate
}
rare.comm.ns.noS = data$numRareNS.noS + data$numCommNS.noS
yuplimit = max(rare.comm.ns.noS)+5
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
# barplot(rare.comm.ns,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),col='blue')
# barplot(data$numRareNS.noS,add=T,xaxt="n",col='red') # tab.var.noSingle
barplot(rare.comm.ns.noS,names.arg=data$resNum,main=paste('variants by ', domain, ' motif pos'),
col='blue', ylim=c(0,yuplimit))
barplot(data$numRareNS.noS,add=T,xaxt="n",col='red',ylim=c(0,yuplimit)) # tab.var.noSingle
num.Comm.noS = data$totVar.noS  - data$numRare.noS
a = log(data$numRare.noS/num.Comm.noS)
a.finite = a[!is.infinite(a)]
a[a == "Inf"] <- max(a.finite) +1
a[a == "-Inf"] <- -max(a.finite) -1
x11()
barplot(a,names.arg=data$resNum,
main=paste('rare:common variants noS by ',domain,'motif pos'),
col='red')
num.S.noS = data$numRareS.noS + data$numCommS.noS
x11()
par(cex.axis=1, cex.lab=2, cex.main=2)
b=log(data$num.NS.noS/num.S.noS)
b.finite = b[!is.infinite(a)]
b[b == "Inf"] <- max(a.finite) +1
b[b == "-Inf"] <- -max(a.finite) -1
barplot(b, names.arg=data$resNum,
main=paste('ns:s variants noS by ',domain,'motif pos'),
col='orange')
setwd("C:/Users/Jieming/Documents/thesis/lynne_work/motifVar/tpr/blosum_sift_polyphen2_gerp")
library(ggplot2)
library(matrixcalc)
boxbubbleplot <- function(title,resNumCol,scoreCol,lastCol,data, cexAxisFontSize=2)
{
title = title
resNum = data[,resNumCol]
blosum = data[,scoreCol]
m=max(blosum)
tt.blosum=table(resNum, blosum)
range01 = function(x){(x-min(x))/(max(x)-min(x))}
# #   x11()
#   par(mar=c(5,6,4,4),xpd=TRUE,mar=c(1, 4, 1, 1) + 1)
#   boxplot(blosum~resNum,xlab="position",ylab=paste(title,sep=" "),cex.lab=2, cex.axis=cexAxisFontSize, las=2)
#
#   ## convert table counts of SNVs at each position to dataframe
#   a.blosum=as.data.frame(table(resNum))[,2]
#   text(0,m+0.5,paste(a.blosum,collapse=" "),adj = c(0,0))
#
#   ###### bubble plot
#   df = expand.grid(sort(unique(resNum)),sort(unique(blosum)))
#   aa = as.vector(table(resNum, blosum))
#   df$value = aa
#
#   # x11()
#   area = pi * (df$value/150)^2
#   par(mar=c(5,6,4,4),xpd=TRUE)
#   area = (range01(df$value)/2)^2 * pi
#   symbols(df$Var1,df$Var2,circles=area, inches=F, bg=rgb(1,0,0,0.5), fg="black", yaxt="n",
#           xaxt="n",add=T)
#
#   # axis(1,at=seq(1,34), las=2)
#   # axis(2,at=seq(-4,9))
#   # text(0,3,paste(a.blosum,collapse=" "),adj = c(0,0))
## ordered
#     x11()
par(xpd=TRUE,mar=c(3, 4, 1, 1) + 1)
boxplot(blosum~data[,lastcol],xlab="position",ylab=paste(title,sep=" "),cex.lab=2, cex.axis=cexAxisFontSize, las=2)
a.blosumordered=as.data.frame(table(data[,lastcol]))[,2]
text(0,m+0.5,paste(a.blosumordered,collapse=" "),adj = c(0,0))
#### bubble
#   x11()
par(xpd=TRUE)
df.ordered = expand.grid(sort(unique(data[,lastcol])),sort(unique(blosum)))
aa.ordered = as.vector(table(data[,lastcol], blosum))
df.ordered$value = aa.ordered
area.ordered = (range01(df.ordered$value)/2)^2 * pi
symbols(df.ordered$Var1,df.ordered$Var2,circles=area.ordered, inches=F, bg=rgb(1,0,0,0.5), fg="black", yaxt="n",
xaxt="n",xlab='position',ylab=paste(title, "scores",sep=" "),add=T)
# axis(1,at=seq(1,34),labels=as.vector(sort(unique(data[,lastcol]))), las=2)
# axis(2,at=seq(-4,9))
#   return(blosum);
}
####################################################################
filename = 'final.merged.ExAC.ens73.TPR.34aa.vepoutput.coding.canonical.sorted.auto.blosum62-30-35-40-45-50.sift.gerp.bed'
data = read.table(filename, header=F, stringsAsFactors = F, comment.char="", sep="\t")
order = read.table('order_relentropy.txt', header=T, stringsAsFactors = F, comment.char="", sep="\t")
lastcol=ncol(data)+1
resNumCol=45
## we insert ordered info into lastCol so order info is lastCol
data[,lastcol] = factor(data[,resNumCol], levels=levels(data[,resNumCol])<-order$pos)
# gerp vs blosum30
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
## by position
resNum = 24
NSData = gerp.NSData[gerp.NSData[,resNumCol]==resNum,]
x11()
plot(NSData$V76,NSData$V77,main=paste("NSonly at pos",resNum),xlab='GERP',ylab='BLOSUM30')
title = 'Condel'
scoreCol = 69
tt.condel=table(data[,resNumCol], data[,scoreCol])
## convert table counts of SNVs at each position to dataframe; nonmissing
condel.nonmissData=data[complete.cases(data[,scoreCol]),]
title = 'Polyphen'
scoreCol = 72
tt.polyphen=table(data[,resNumCol], data[,scoreCol])
## convert table counts of SNVs at each position to dataframe; nonmissing
polyphen.nonmissData=data[complete.cases(data[,scoreCol]),]
title = 'SIFT'
scoreCol = 75
tt.sift=table(data[,resNumCol], 1-data[,scoreCol])
## convert table counts of SNVs at each position to dataframe; nonmissing
sift.nonmissData=data[complete.cases(data[,scoreCol]),]
sift.nonmissData[,scoreCol] = 1-nonmissData[,scoreCol]
title = 'GERP'
scoreCol = 76
siftscorecol = 75
tt.gerp=table(data[,resNumCol], data[,scoreCol])
gerp.nonmissData=data[complete.cases(data[,scoreCol]),]
gerp.NSData=data[complete.cases(data[,siftscorecol]),]
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
## by position
resNum = 24
NSData = gerp.NSData[gerp.NSData[,resNumCol]==resNum,]
x11()
plot(NSData$V76,NSData$V77,main=paste("NSonly at pos",resNum),xlab='GERP',ylab='BLOSUM30')
View(NSData)
View(gerp.NSData)
View(gerp.NSData)
View(NSData)
View(data)
View(NSData)
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
View(rareVar)
par(xpd=TRUE)
plot(rareVar$V76,rareVar$V77,col='red', )
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
commVar
plot(commVar$V76,commVar$V77,col='blue', )
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(xpd=TRUE)
plot(rareVar$V76,rareVar$V77,col='red', )
par(xpd=TRUE)
plot(commVar$V76,commVar$V77,col='blue', )
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(xpd=TRUE)
plot(rareVar$V76,rareVar$V77,col='red')
par(xpd=TRUE)
plot(commVar$V76,commVar$V77,col='blue')
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(xpd=TRUE)
plot(rareVar$V76,rareVar$V77,col='red')
plot(commVar$V76,commVar$V77,col='blue')
par(xpd=TRUE)
plot(commVar$V76,commVar$V77,col='blue')
plot(rareVar$V76,rareVar$V77,col='red')
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red')
par(new=T)
plot(commVar$V76,commVar$V77,col='blue')
plot(rareVar$V76,rareVar$V77,col='red',axt='n')
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n')
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n')
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n')
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlabel='',ylabel='')
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlabel='',ylabel='')
warnings()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='')
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='')
x11()
plot(gerp.NSData$V69,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='Condel',ylab='BLOSUM30')
par(new=T)
plot(rareVar$V69,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='')
par(new=T)
plot(commVar$V69,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='')
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
View(commVar)
x11()
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30',ylim=c(-6,-4))
rareVar=gerp.NSData[gerp.NSData$V20 <= 0.005,]
commVar=gerp.NSData[gerp.NSData$V20 > 0.005,]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3,ylim=c(-6,-4))
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3,ylim=c(-6,-4))
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30',ylim=c(-6,-4))
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30',ylim=c(-7,-3))
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[(gerp.NSData$V20 <= 0.005),]
commVar=gerp.NSData[(gerp.NSData$V20 > 0.005),]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3,ylim=c(-6,-4))
?plot
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3,ylim=c(-6,-4))
par(xpd=TRUE,cex.axis=1, cex.lab=1.5, cex.main=1.5)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30')
rareVar=gerp.NSData[(gerp.NSData$V20 <= 0.005),]
commVar=gerp.NSData[(gerp.NSData$V20 > 0.005),]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3)
range.x = range(gerp.NSData$V76)
range.x
range.y = range(gerp.NSData$V77)
plot(gerp.NSData$V76,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='GERP',ylab='BLOSUM30', xlim=range.x, ylim=range.y)
rareVar=gerp.NSData[(gerp.NSData$V20 <= 0.005),]
commVar=gerp.NSData[(gerp.NSData$V20 > 0.005),]
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
x11()
range.x = range(gerp.NSData$V69)
range.y = range(gerp.NSData$V77)
plot(gerp.NSData$V69,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='Condel',ylab='BLOSUM30', xlim=range.x, ylim=range.y)
par(new=T)
plot(rareVar$V69,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='', xlim=range.x, ylim=range.y)
par(new=T)
plot(commVar$V69,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='', xlim=range.x, ylim=range.y)
range.x = range(gerp.NSData$V69)
range.y = range(gerp.NSData$V77)
plot(gerp.NSData$V69,gerp.NSData$V77,main=paste("NSonly all pos"),xlab='Condel',ylab='BLOSUM30', xlim=range.x, ylim=range.y)
xlim
range.x
x11()
range.x = range(gerp.NSData$V76)
range.y = range(gerp.NSData$V69)
plot(gerp.NSData$V76,gerp.NSData$V69,main=paste("NSonly all pos"),xlab='GERP',ylab='Condel', xlim=range.x, ylim=range.y)
range.y = range(!isna(gerp.NSData$V69))
?is.na
range.y = range(!is.na(gerp.NSData$V69))
range.y
plot(gerp.NSData$V76,gerp.NSData$V69,main=paste("NSonly all pos"),xlab='GERP',ylab='Condel', xlim=range.x, ylim=range.y)
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
par(new=T)
plot(commVar$V76,commVar$V77,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
plot(gerp.NSData$V76,gerp.NSData$V69,main=paste("NSonly all pos"),xlab='GERP',ylab='Condel', xlim=range.x, ylim=range.y)
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x)
plot(gerp.NSData$V76,gerp.NSData$V69,main=paste("NSonly all pos"),xlab='GERP',ylab='Condel', xlim=range.x)
par(new=T)
plot(rareVar$V76,rareVar$V77,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x)
plot(gerp.NSData$V76,gerp.NSData$V69,main=paste("NSonly all pos"),xlab='GERP',ylab='Condel', xlim=range.x, ylim=range.y)
par(new=T)
plot(rareVar$V76,rareVar$V69,col='red',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
par(new=T)
plot(commVar$V76,commVar$V69,col='blue',xaxt='n',yaxt='n',xlab='',ylab='',pch=3, xlim=range.x, ylim=range.y)
